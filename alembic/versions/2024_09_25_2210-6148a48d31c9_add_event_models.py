"""add event models

Revision ID: 6148a48d31c9
Revises: d55ce2a668c3
Create Date: 2024-09-25 22:10:50.455228

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "6148a48d31c9"
down_revision: Union[str, None] = "d55ce2a668c3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "area",
        sa.Column("area_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "name",
            sa.Enum(
                "cachka_house",
                "metenkov_house",
                "l52",
                "water_tower",
                "makletsky_house",
                "memorial_complex",
                name="areaenum",
            ),
            nullable=False,
        ),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("phone", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("area_id", name=op.f("pk_area")),
    )
    op.create_table(
        "event",
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("image_url", sa.String(), nullable=True),
        sa.Column("disabilities", sa.Boolean(), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("event_id", name=op.f("pk_event")),
    )
    op.create_table(
        "tag",
        sa.Column("tag_id", sa.BigInteger(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("tag_id", name=op.f("pk_tag")),
        sa.UniqueConstraint("name", name=op.f("uq_tag_name")),
    )
    op.create_table(
        "event_genre",
        sa.Column("event_genre_id", sa.BigInteger(), nullable=False),
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "name",
            sa.Enum(
                "excursion",
                "master_class",
                "spectacle",
                "exhibition",
                "interactive_lesson",
                "concert",
                "genealogy",
                "lecture",
                "creative_meeting",
                "festival",
                "artist_talk",
                "film_screening",
                name="genreenum",
            ),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.event_id"],
            name=op.f("fk_event_genre_event_id_event"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("event_genre_id", name=op.f("pk_event_genre")),
    )
    op.create_table(
        "event_location",
        sa.Column("event_location_id", sa.BigInteger(), nullable=False),
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column("location_id", sa.BigInteger(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.event_id"],
            name=op.f("fk_event_location_event_id_event"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["location_id"],
            ["area.area_id"],
            name=op.f("fk_event_location_location_id_area"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("event_location_id", name=op.f("pk_event_location")),
    )
    op.create_table(
        "event_tag",
        sa.Column("event_tag_id", sa.BigInteger(), nullable=False),
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column("tag_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.event_id"],
            name=op.f("fk_event_tag_event_id_event"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tag.tag_id"],
            name=op.f("fk_event_tag_tag_id_tag"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("event_tag_id", name=op.f("pk_event_tag")),
    )
    op.create_table(
        "event_visitor_age",
        sa.Column("event_visitor_age_id", sa.BigInteger(), nullable=False),
        sa.Column("event_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "name",
            sa.Enum("adults", "teenagers", "kids", name="visitorageenum"),
            nullable=False,
        ),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["event_id"],
            ["event.event_id"],
            name=op.f("fk_event_visitor_age_event_id_event"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "event_visitor_age_id", name=op.f("pk_event_visitor_age")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("event_visitor_age")
    op.drop_table("event_tag")
    op.drop_table("event_location")
    op.drop_table("event_genre")
    op.drop_table("tag")
    op.drop_table("event")
    op.drop_table("area")
    # ### end Alembic commands ###
